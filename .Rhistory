<<<<<<< HEAD
Eigen = igraph::eigen_centrality(BNHQA))
HQA <- HQA[ -c(5:25) ]
rownames(HQA)
HQA <- HQA[23:54,]
HQA$SS <- rownames(HQA)
HQA$Accreditation <- "High-Quality Certification"
Centralities2 <- list(HQA, QC)
Centralities2 <- as.data.frame(do.call(rbind, Centralities2))
Resumen2 <- data.frame(table(Centralities2$SS))
library(ggridges)
library(ggplot2)
ggplot(Centralities2, aes(x = Eigen.vector, y = Accreditation, fill = Accreditation)) +
=======
library(dplyr)
textos <- mutate(textos, Program = ifelse(grepl("Especiali", text), "Specialization",
ifelse(grepl("Maestr", text), "Master", "Doctorate")))
# Step 2: Creating a corpus from texts
library(quanteda)
Textos <- corpus(textos)
# Step 3: Tagging the texts according to
# their program type and accreditation
source("SampleAnalysis.R")
Muestra$codigoprograma <- gsub("[^0-9-]", "", Muestra$codigoprograma)
Muestra <- Muestra[order(Muestra$codigoprograma), ]
textos <- textos[order(textos$doc_id), ]
names(Muestra)[4] <- "doc_id"
table(textos$doc_id == Muestra$doc_id)
textos$doc_id == Muestra$doc_id
textos$doc_id[72]
Muestra$doc_id[72]
textos$doc_id[79]
Muestra$doc_id[79]
Muestra$doc_id[72] <- "14-2"
Muestra$doc_id[79] <- "15-7"
table(textos$doc_id == Muestra$doc_id)
library(tidyverse)
textos <- textos %>% inner_join(Muestra, join_by(doc_id))
docvars(Textos, "Program") <- textos$Program
docvars(Textos, "Institution") <- textos$NOMBRE_INSTITUCIÓN
docvars(Textos, "Accreditation") <- textos$Accreditation
summary(Textos)
aja <- data.frame(summary(Textos, n = length(Textos)))
SPEC <- corpus_subset(Textos, Program == "Specialization")
MS <- corpus_subset(Textos, Program == "Masters")
PhD <- corpus_subset(Textos, Program == "Doctorate")
QC <- corpus_subset(Textos, Accreditation == "Qualified Certification")
HQC <- corpus_subset(Textos, Accreditation == "High-Quality Certification")
phd <- data.frame(summary(PhD, n = length(PhD)))
# Step 4. Soft Skills theoretically driven identification
# Keywords-in-context Search
pc <- data.frame(kwic(Textos, pattern = phrase("pensamiento crı́tico")))
sp <- data.frame(kwic(Textos, pattern = phrase("solucionar problemas")))
comunicar <- data.frame(kwic(Textos, pattern = "comunicar"))
creatividad <- data.frame(kwic(Textos, pattern = "creatividad"))
paciencia <- data.frame(kwic(Textos, pattern = "paciencia"))
crear <- data.frame(kwic(Textos, pattern = "crear"))
liderar <- data.frame(kwic(Textos, pattern = "liderar"))
resolver <- data.frame(kwic(Textos, pattern = "resolver"))
comprometer <- data.frame(kwic(Textos, pattern = "comprometer"))
comprometerse <- data.frame(kwic(Textos, pattern = "comprometerse"))
gestionar <- data.frame(kwic(Textos, pattern = "gestionar"))
reflexionar <- data.frame(kwic(Textos, pattern = "reflexionar"))
controlar <- data.frame(kwic(Textos, pattern = "controlar"))
etico <- data.frame(kwic(Textos, pattern = "ético"))
tolerar <- data.frame(kwic(Textos, pattern = "tolerar"))
argumentar <- data.frame(kwic(Textos, pattern = "argumentar"))
conflicto <- data.frame(kwic(Textos, pattern = "conflictos"))
negociar <- data.frame(kwic(Textos, pattern = "negociar"))
comprender <- data.frame(kwic(Textos, pattern = "comprender"))
equipo <- data.frame(kwic(Textos, pattern = "equipos"))
planificar <- data.frame(kwic(Textos, pattern = "planificar"))
generar <- data.frame(kwic(Textos, pattern = "generar"))
empatia <- data.frame(kwic(Textos, pattern = "empatı́a"))
compartir <- data.frame(kwic(Textos, pattern = "compartir"))
analizar <- data.frame(kwic(Textos, pattern = "analizar"))
reconocer <- data.frame(kwic(Textos, pattern = "reconocer"))
orientar <- data.frame(kwic(Textos, pattern = "orientar"))
respetar <- data.frame(kwic(Textos, pattern = "respetar"))
motivar <- data.frame(kwic(Textos, pattern = "motivar"))
cooperar <- data.frame(kwic(Textos, pattern = "cooperar"))
fortalecer <- data.frame(kwic(Textos, pattern = "fortalecer"))
impulsar <- data.frame(kwic(Textos, pattern = "impulsar"))
acercar <- data.frame(kwic(Textos, pattern = "acercar"))
ayudar <- data.frame(kwic(Textos, pattern = "ayudar"))
cambiar <- data.frame(kwic(Textos, pattern = "cambiar"))
apreciar <- data.frame(kwic(Textos, pattern = "apreciar"))
dirigir <- data.frame(kwic(Textos, pattern = "dirigir"))
fomentar <- data.frame(kwic(Textos, pattern = "fomentar"))
interactuar <- data.frame(kwic(Textos, pattern = "interactuar"))
identificar <- data.frame(kwic(Textos, pattern = "identificar"))
competir <- data.frame(kwic(Textos, pattern = "competir"))
manifestar <- data.frame(kwic(Textos, pattern = "manifestar"))
responsable <- data.frame(kwic(Textos, pattern = "responsable"))
evaluar <- data.frame(kwic(Textos, pattern = "evaluar"))
innovar <- data.frame(kwic(Textos, pattern = "innovar"))
decidir <- data.frame(kwic(Textos, pattern = "decidir"))
td <- data.frame(kwic(Textos, pattern = phrase("tomar decisiones")))
flex <- data.frame(kwic(Textos, pattern = "flexibilidad"))
persu <- data.frame(kwic(Textos, pattern = "persua*"))
conven <- data.frame(kwic(Textos, pattern = "convencer"))
rm(institution, LevelsOfficials,
LevelsPrivate, listado, Muestra,
Officials, Private, Sector, textos,
Textos, DATA_DIR)
TODAS <- rbind(persu, conven, flex, td, decidir, sp,
pc, creatividad, paciencia, crear,
innovar, acercar, analizar, apreciar,
argumentar, ayudar, cambiar, compartir,
competir, comprender, comprometer,
comprometerse, comunicar, conflicto,
controlar, cooperar, dirigir, empatia,
equipo, etico, evaluar, fomentar, fortalecer,
generar, gestionar, identificar, impulsar,
interactuar, liderar, manifestar, motivar,
negociar, orientar, planificar, reconocer,
reflexionar, resolver, respetar,
responsable, tolerar)
colnames(aja)[1] <- "docname"
library(dplyr)
TODAS2 <- TODAS %>%
select(-from, -to, -pre, -post, -pattern) %>%
left_join(aja, by = "docname")
Spec <- TODAS2 %>% filter(., Program == "Specialization")
MS <- TODAS2 %>% filter(., Program == "Master")
PhD <- TODAS2 %>% filter(., Program == "Doctorate")
save.image("DataForFigure4.RData")
# Step 5. Plotting results
load("DataForFigure4.RData")
rm(list=setdiff(ls(), "TODAS"))
TODAS[TODAS=="acercar"] <- "S1"
TODAS[TODAS=="analizar"] <- "S2"
TODAS[TODAS=="argumentar"] <- "S3"
TODAS[TODAS=="ayudar"] <- "S4"
TODAS[TODAS=="cambiar"] <- "S5"
TODAS[TODAS=="compartir"] <- "S6"
TODAS[TODAS=="competir"] <- "S7"
TODAS[TODAS=="comprender"] <- "S8"
TODAS[TODAS=="comprometerse"] <- "S9"
TODAS[TODAS=="comunicar"] <- "S10"
TODAS[TODAS=="conflictos"] <- "S11"
TODAS[TODAS=="controlar"] <- "S12"
TODAS[TODAS=="crear"] <- "S13"
TODAS[TODAS=="creatividad"] <- "S14"
TODAS[TODAS=="decidir"] <- "S15"
TODAS[TODAS=="dirigir"] <- "S16"
TODAS[TODAS=="empatı́a"] <- "S17"
TODAS[TODAS=="equipos"] <- "S18"
TODAS[TODAS=="ético"] <- "S19"
TODAS[TODAS=="evaluar"] <- "S20"
TODAS[TODAS=="flexibilidad"] <- "S21"
TODAS[TODAS=="fomentar"] <- "S22"
TODAS[TODAS=="fortalecer"] <- "S23"
TODAS[TODAS=="generar"] <- "S24"
TODAS[TODAS=="gestionar"] <- "S25"
TODAS[TODAS=="identificar"] <- "S26"
TODAS[TODAS=="impulsar"] <- "S27"
TODAS[TODAS=="innovar"] <- "S28"
TODAS[TODAS=="interactuar"] <- "S29"
TODAS[TODAS=="liderar"] <- "S30"
TODAS[TODAS=="manifestar"] <- "S31"
TODAS[TODAS=="motivar"] <- "S32"
TODAS[TODAS=="orientar"] <- "S33"
TODAS[TODAS=="pensamiento crı́tico"] <- "S34"
TODAS[TODAS=="persuasión"] <- "S35"
TODAS[TODAS=="planificar"] <- "S36"
TODAS[TODAS=="reconocer"] <- "S37"
TODAS[TODAS=="reflexionar"] <- "S38"
TODAS[TODAS=="resolver"] <- "S39"
TODAS[TODAS=="respetar"] <- "S40"
TODAS[TODAS=="responsable"] <- "S41"
TODAS[TODAS=="solucionar problemas"] <- "S42"
TODAS[TODAS=="tomar decisiones"] <- "S43"
# Figure 4 Panel A
Network <- TODAS[,c(1,5)]
table(Network$keyword)
Network <- Network[!duplicated(Network[c(1,2)]),]
library(igraph)
bn2 <- graph.data.frame(Network,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$label.cex <- ifelse(V(bn2)$type, 0.5, 1)
V(bn2)$size <- sqrt(igraph::degree(bn2))
E(bn2)$color <- "lightgrey"
bn2.pr <- bipartite.projection(bn2)
Terms <- bn2.pr$proj2
centrality_scores <- degree(Terms)
CS <- centrality_scores
normalized_scores <- (CS - min(CS)) / (max(CS) - min(CS))
# Create a color palette with different colors
color_palette <- colorRampPalette(c("red", "pink", "lightgreen", "green"))
(length(unique(normalized_scores)))
# Assign colors to nodes based on their normalized centrality scores
node_colors <- color_palette[rank(normalized_scores)]
# Plot the network with node colors based on centrality
plot(Terms, vertex.label.color = "black",
vertex.label.cex = 0.8,
vertex.color = node_colors,
vertex.size = 15, edge.width = 0.5,
edge.color = "lightgray",
layout = layout_components, main = "")
# Figure 4 Panel A
Network <- TODAS[,c(1,5)]
table(Network$keyword)
Network <- Network[!duplicated(Network[c(1,2)]),]
library(igraph)
bn2 <- graph.data.frame(Network,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$label.cex <- ifelse(V(bn2)$type, 0.5, 1)
V(bn2)$size <- sqrt(igraph::degree(bn2))
E(bn2)$color <- "lightgrey"
bn2.pr <- bipartite.projection(bn2)
Terms <- bn2.pr$proj2
centrality_scores <- degree(Terms)
CS <- centrality_scores
normalized_scores <- (CS - min(CS)) / (max(CS) - min(CS))
# Create a color palette with different colors
color_palette <- colorRampPalette(c("red", "pink", "lightgreen", "green"))
(length(unique(normalized_scores)))
# Assign colors to nodes based on their normalized centrality scores
node_colors <- color_palette[rank(normalized_scores)]
library(readr)
Data_Figure2 <- read_csv("Data_Figure2.csv")
library(igraph)
# Figure Panel A
Network <- Data_Figure2
bn2 <- graph.data.frame(Network,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "green", "red")
V(bn2)$shape <- ifelse(V(bn2)$type, "square", "circle")
V(bn2)$label.cex <- ifelse(V(bn2)$type, 0.5, 1)
V(bn2)$size <- sqrt(igraph::degree(bn2))
E(bn2)$color <- "lightgrey"
bn2.pr <- bipartite.projection(bn2)
Programs <- bn2.pr$proj2
Skills <- bn2.pr$proj1
# Plot the network with node colors based on centrality
plot(Skills, vertex.label.color = "black",
vertex.label.cex = 1.5,
vertex.color = "lightgreen",
vertex.size = 60,
edge.width = 3.5,
edge.color = "gray30",
layout = layout_components, main = "")
plot(Programs, vertex.label.color = "black",
vertex.label.cex = 1.2,
vertex.color = "pink",
vertex.size = 40,
edge.width = 5,
edge.color = "gray30",
layout = layout_components,
main = "")
load("DataForFigure4.RData")
rm(list=setdiff(ls(), "TODAS"))
TODAS$keyword <- tolower(TODAS$keyword)
TODAS[TODAS=="acercar"] <- "S1"
View(TODAS)
load("DataForFigure4.RData")
rm(list=setdiff(ls(), "TODAS"))
TODAS$keyword <- tolower(TODAS$keyword)
View(TODAS)
TODAS[TODAS$keyword=="acercar"] <- "S1"
View(TODAS)
load("DataForFigure4.RData")
rm(list=setdiff(ls(), "TODAS"))
TODAS$keyword <- tolower(TODAS$keyword)
View(TODAS)
View(TODAS)
TODAS[TODAS$keyword=="acercar"] <- "S1"
library(dplyr)
recode(TODAS$keyword, acercar = "S1", analizar = "S2", argumentar = "S3")
View(TODAS)
View(TODAS)
load("DataForFigure4.RData")
rm(list=setdiff(ls(), "TODAS"))
TODAS$keyword <- tolower(TODAS$keyword)
TODAS$keyword[TODAS$keyword=="acercar"] <- "S1"
View(TODAS)
TODAS$keyword[TODAS$keyword=="analizar"] <- "S2"
TODAS$keyword[TODAS$keyword=="argumentar"] <- "S3"
TODAS$keyword[TODAS$keyword=="ayudar"] <- "S4"
TODAS$keyword[TODAS$keyword=="cambiar"] <- "S5"
TODAS$keyword[TODAS$keyword=="compartir"] <- "S6"
TODAS$keyword[TODAS$keyword=="competir"] <- "S7"
TODAS$keyword[TODAS$keyword=="comprender"] <- "S8"
TODAS$keyword[TODAS$keyword=="comprometerse"] <- "S9"
TODAS$keyword[TODAS$keyword=="comunicar"] <- "S10"
TODAS$keyword[TODAS$keyword=="conflictos"] <- "S11"
TODAS$keyword[TODAS$keyword=="controlar"] <- "S12"
TODAS$keyword[TODAS$keyword=="crear"] <- "S13"
TODAS$keyword[TODAS$keyword=="creatividad"] <- "S14"
TODAS$keyword[TODAS$keyword=="decidir"] <- "S15"
TODAS$keyword[TODAS$keyword=="dirigir"] <- "S16"
TODAS$keyword[TODAS$keyword=="empatía"] <- "S17"
TODAS$keyword[TODAS$keyword=="equipos"] <- "S18"
TODAS$keyword[TODAS$keyword=="ético"] <- "S19"
TODAS$keyword[TODAS$keyword=="evaluar"] <- "S20"
TODAS$keyword[TODAS$keyword=="flexibilidad"] <- "S21"
TODAS$keyword[TODAS$keyword=="fomentar"] <- "S22"
TODAS$keyword[TODAS$keyword=="fortalecer"] <- "S23"
TODAS$keyword[TODAS$keyword=="generar"] <- "S24"
TODAS$keyword[TODAS$keyword=="gestionar"] <- "S25"
TODAS$keyword[TODAS$keyword=="identificar"] <- "S26"
TODAS$keyword[TODAS$keyword=="impulsar"] <- "S27"
TODAS$keyword[TODAS$keyword=="innovar"] <- "S28"
TODAS$keyword[TODAS$keyword=="interactuar"] <- "S29"
TODAS$keyword[TODAS$keyword=="liderar"] <- "S30"
TODAS$keyword[TODAS$keyword=="manifestar"] <- "S31"
TODAS$keyword[TODAS$keyword=="motivar"] <- "S32"
TODAS$keyword[TODAS$keyword=="orientar"] <- "S33"
TODAS$keyword[TODAS$keyword=="pensamiento crítico"] <- "S34"
TODAS$keyword[TODAS$keyword=="persuasión"] <- "S35"
TODAS$keyword[TODAS$keyword=="planificar"] <- "S36"
TODAS$keyword[TODAS$keyword=="reconocer"] <- "S37"
TODAS$keyword[TODAS$keyword=="reflexionar"] <- "S38"
TODAS$keyword[TODAS$keyword=="resolver"] <- "S39"
TODAS$keyword[TODAS$keyword=="respetar"] <- "S40"
TODAS$keyword[TODAS$keyword=="responsable"] <- "S41"
TODAS$keyword[TODAS$keyword=="solucionar problemas"] <- "S42"
TODAS$keyword[TODAS$keyword=="tomar decisiones"] <- "S43"
# Figure Panel A
Network <- TODAS[c(1,5)]
View(Network)
table(Network$keyword)
Network <- Network[!duplicated(Network[c(1,2)]),]
library(igraph)
bn2 <- graph.data.frame(Network,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$label.cex <- ifelse(V(bn2)$type, 0.5, 1)
V(bn2)$size <- sqrt(igraph::degree(bn2))
E(bn2)$color <- "lightgrey"
bn2.pr <- bipartite.projection(bn2)
Terms <- bn2.pr$proj2
centrality_scores <- degree(Terms)
# Normalize the centrality scores to a range between 0 and 1
normalized_scores <- (centrality_scores - min(centrality_scores)) / (max(centrality_scores) - min(centrality_scores))
# Create a color palette with different colors
color_palette <- colorRampPalette(c("red", "pink", "lightgreen", "green"))(length(unique(normalized_scores)))
# Assign colors to nodes based on their normalized centrality scores
node_colors <- color_palette[rank(normalized_scores)]
# Plot the network with node colors based on centrality
plot(Terms, vertex.label.color = "black", vertex.label.cex = 0.8, vertex.color = node_colors, vertex.size = 15, edge.width = 0.5, edge.color = "lightgray", layout = layout_components, main = "")
load("DataForFigure4B.RData")
rm(list=setdiff(ls(), "Gen"))
Gen <- Gen[1:4]
library(psych)
pairs.panels(Gen,
method = "spearman",
hist.col = "green",
density = TRUE,
ellipses = TRUE,
pch = 15,
cex = 1.5,
cex.axis = 1.8,
cex.labels = 2.5,
lwd = 2,
rug = TRUE,
stars = TRUE
)
load("DataforResultingBipartiteNetwork.RData")
rm(list=setdiff(ls(), "DTM3"))
DTM4 <- apply(DTM3, 1, function(row) any(row != 0))
BN <- DTM3[DTM4, ]
library(bipartite)
plotweb(BN, method = "normal",
col.high = "lightgreen",
bor.col.high = "lightgreen",
col.low = "pink",
bor.col.low = "pink",
col.interaction = "grey90",
bor.col.interaction = "grey90",
low.lablength = 0,
labsize = 2)
# Network Comparisons
load("ResultsbyProgram.RData")
load("ResultsbyAccreditation.RData")
library(ggplot2)
library(ggridges)
p1 <- ggplot(Centralities, aes(x = Eigen.vector, y = Level, fill = Level)) +
>>>>>>> e413ff6000721643e676313c5bad36e430815ebf
geom_density_ridges(alpha = 0.3) +
theme_ridges() +
theme(legend.position = "none") +
xlab("Eigenvector Centrality") +
<<<<<<< HEAD
ylab("Type of Accreditation")
IM <- as_incidence_matrix(BNHQA, names = TRUE, sparse = TRUE, types = bipartite_mapping(BNHQA)$type)
IM2 <- as.matrix(IM)
bipartite.mapping(BNHQA)
V(BNHQA)$type <- bipartite_mapping(BNHQA)$type
V(BNHQA)$color <- ifelse(V(BNHQA)$type, "red", "green")
V(BNHQA)$shape <- ifelse(V(BNHQA)$type, "circle", "square")
V(BNHQA)$label.cex <- ifelse(V(BNHQA)$type, 0.8, 1)
V(BNHQA)$size <- sqrt(igraph::degree(BNHQA))
E(BNHQA)$color <- "lightgrey"
plot(BNHQA,
vertex.label = NA,
layout = layout_components,
main = "")
library(ggplot2)
ggplot(Centralities2, aes(x = Eigen.vector, y = Accreditation, fill = Accreditation)) +
=======
ylab("Academic Program") +
theme(axis.text.x=element_text(size=35)) +
theme(axis.text.y=element_text(size=35)) +
theme(axis.title.x=element_text(face="italic", colour="black", size=35)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=35))
p2 <- ggplot(Centralities2, aes(x = Eigen.vector, y = Accreditation, fill = Accreditation)) +
>>>>>>> e413ff6000721643e676313c5bad36e430815ebf
geom_density_ridges(alpha = 0.3) +
theme_ridges() +
theme(legend.position = "none") +
xlab("Eigenvector Centrality") +
ylab("Type of Accreditation") +
theme(axis.text.x=element_text(size=35)) +
theme(axis.text.y=element_text(size=35)) +
theme(axis.title.x=element_text(face="italic", colour="black", size=35)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=35))
library(ggpubr)
ggarrange(p1, p2, labels = c("(A)", "(B)"), ncol = 1, nrow = 2)
# Analysis of Soft Skills Centrality
load("ResultsbyProgram.RData")
load("ResultsbyAccreditation.RData")
# Here we found that 31 soft skills are present all across sampled programs
table(Resumen$Freq)
library(dplyr)
SoftSkillsCentrality <- Centralities %>% filter(., grepl('analizar|ayudar|compartir|competir|comprender|comunicar|crear|creatividad|dirigir|equipos|ético|evaluar|flexibilidad|fomentar|fortalecer|generar|gestionar|identificar|impulsar|innovar|interactuar|liderar|orientar|pensamiento crítico|persuasión|planificar|reconocer|reflexionar|resolver|responsable|tomar decisiones', SS))
library(ggplot2)
ggplot(SoftSkillsCentrality, aes(x=reorder(SS, Closeness), y=Closeness)) +
scale_fill_discrete(name="Academic Program") +
geom_point(size=5, aes(colour=Level), alpha=0.6) +
# Use a larger dot
theme_bw() +
theme(axis.text.x = element_text(angle=60, hjust=1),
panel.grid.major.y = element_line(colour="grey60", linetype="dashed"),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(colour="grey60", linetype="dashed"),) +
coord_flip() + theme(legend.position="top") +
theme(axis.text.x=element_text(size=15, colour="black")) +
theme(axis.text.y=element_text(size=15, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=20)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=20)) +
xlab("Soft Skills") +
ylab("Closeness Centrality") +
theme(legend.position=c(0.95,0.1), legend.justification=c(0.95,0.1))
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'generar'] <- 'Generate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'creatividad'] <- 'Creativity'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'crear'] <- 'Create'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'liderar'] <- 'Leadership'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'identificar'] <- 'Identify'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'analizar'] <- 'Analytical'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'resolver'] <- 'Solving'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'evaluar'] <- 'Evaluate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'equipos'] <- 'Teamwork'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'gestionar'] <- 'Management'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'dirigir'] <- 'Addressing'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'tomar decisiones'] <- 'Decision Making'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'reconocer'] <- 'Acknowledge'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'innovar'] <- 'Innovate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'responsable'] <- 'Accountability'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'pensamiento crítico'] <- 'Critical Thinking'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'comprender'] <- 'Understanding'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'ético'] <- 'Ethical Thinking'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'fortalecer'] <- 'Strength'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'orientar'] <- 'Guidance'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'compartir'] <- 'Sharing'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'fomentar'] <- 'Foment'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'interactuar'] <- 'Social Interaction'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'comunicar'] <- 'Communication'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'flexibilidad'] <- 'Flexibility'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'reflexionar'] <- 'Thoughtfulness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'ayudar'] <- 'Helping others'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'persuasión'] <- 'Persuasiveness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'impulsar'] <- 'Thrust'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'competir'] <- 'Competitiveness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'planificar'] <- 'Planning'
library(ggplot2)
p <- ggplot(SoftSkillsCentrality, aes(x=reorder(SS, Eigen.vector), y=Eigen.vector)) +
scale_fill_discrete(name="Academic Program") +
geom_point(size=5, aes(colour=Level), alpha=0.6) +
# Use a larger dot
theme_bw() +
theme(axis.text.x = element_text(angle=60, hjust=1),
panel.grid.major.y = element_line(colour="grey60", linetype="dashed"),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(colour="grey60", linetype="dashed"),) +
coord_flip() + theme(legend.position="top") +
theme(axis.text.x=element_text(size=25, colour="black")) +
theme(axis.text.y=element_text(size=25, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=25)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=25)) +
xlab("Soft Skills") +
ylab("Eigenvector Centrality") +
theme(legend.title=element_text(size=20), legend.text = element_text(size = 20), legend.position=c(0.95,0.1), legend.justification=c(0.95,0.1))
p + labs(color = "Program Type")
Data_Figure2 <- read_csv("Data_Figure2.csv")
library(igraph)
<<<<<<< HEAD
BNS <- graph.data.frame(SpecPrograms, directed = FALSE)
BNM <- graph.data.frame(MasterPrograms, directed = FALSE)
BND <- graph.data.frame(DoctoratePrograms, directed = FALSE)
BNA <- graph.data.frame(General, directed = FALSE)
hist(degree_distribution(BNS))
hist(degree_distribution(BNM))
hist(degree_distribution(BND))
hist(degree_distribution(BNA))
Spec <- data.frame(Degree = igraph::degree(BNS),
Closeness = igraph::closeness(BNS),
Betweennes = igraph::betweenness(BNS),
Eigen = igraph::eigen_centrality(BNS))
Spec <- Spec[ -c(5:25) ]
rownames(Spec)
Spec$SS <- rownames(Spec)
Spec <- Spec[order(Spec$SS), ]
Spec <- Spec[101:140,]
Spec$Level <- "Specialization"
MS <- data.frame(Degree = igraph::degree(BNM),
Closeness = igraph::closeness(BNM),
Betweennes = igraph::betweenness(BNM),
Eigen = igraph::eigen_centrality(BNM))
MS <- MS[ -c(5:25) ]
rownames(MS)
MS$SS <- rownames(MS)
MS <- MS[order(MS$SS), ]
MS <- MS[74:105,]
MS$Level <- "Master"
Doc <- data.frame(Degree = igraph::degree(BND),
Closeness = igraph::closeness(BND),
Betweennes = igraph::betweenness(BND),
Eigen = igraph::eigen_centrality(BND))
Doc <- Doc[ -c(5:25) ]
rownames(Doc)
Doc$SS <- rownames(Doc)
Doc <- Doc[order(Doc$SS), ]
Doc <- Doc[31:60,]
Doc$Level <- "Doctorate"
Gen <- data.frame(Degree = igraph::degree(BNA),
Closeness = igraph::closeness(BNA),
Betweennes = igraph::betweenness(BNA),
Eigen = igraph::eigen_centrality(BNA))
Gen <- Gen[ -c(5:25) ]
rownames(Gen)
Gen$SS <- rownames(Gen)
Gen <- Gen[order(Gen$SS), ]
Gen <- Gen[204:246,]
Centralities <- list(Spec, MS, Doc)
Centralities <- as.data.frame(do.call(rbind, Centralities))
Resumen <- data.frame(table(Centralities$SS))
library(ggridges)
library(ggplot2)
ggplot(Centralities, aes(x = Eigen.vector, y = Level, fill = Level)) +
geom_density_ridges(alpha = 0.3) +
theme_ridges() +
theme(legend.position = "none") +
xlab("Eigenvector Centrality") +
ylab("Academic Program") +
theme(axis.text.x=element_text(size=15)) +
theme(axis.text.y=element_text(size=15)) +
theme(axis.title.x=element_text(face="italic", colour="black", size=20)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=20))
IM <- as_incidence_matrix(BNA, names = TRUE, sparse = TRUE, types = bipartite_mapping(BNA)$type)
IM2 <- as.matrix(IM)
bipartite.mapping(BNA)
V(BNA)$type <- bipartite_mapping(BNA)$type
V(BNA)$color <- ifelse(V(BNA)$type, "red", "green")
V(BNA)$shape <- ifelse(V(BNA)$type, "circle", "square")
V(BNA)$label.cex <- ifelse(V(BNA)$type, 0.8, 1)
V(BNA)$size <- sqrt(igraph::degree(BNA))
E(BNA)$color <- "lightgrey"
plot(BNA,
vertex.label = NA,
layout = layout_as_tree,
main = "")
library(bipartite)
plotweb(IM2, method = "normal", col.high = "lightgreen", col.low = "pink", col.interaction = "lightgrey")
bipartite::visweb(IM2)
save.image("DataForFigure4B.RData")
save.image("ResultsbyProgram.RData")
load("~/Documents/GitHub/SoftSkillsUniversityPrograms/ResultsbyProgram.RData")
library(GGally)
load("ResultsbyProgram.RData")
View(General)
load("ResultsbyAccreditation.RData")
table(Resumen$Freq)
View(Resumen)
View(Centralities)
SoftSkillsCentrality <- General
View(SoftSkillsCentrality)
View(SoftSkillsCentrality)
colnames(SoftSkillsCentrality)[2] <- "SS"
View(SoftSkillsCentrality)
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'generar'] <- 'Generate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'creatividad'] <- 'Creativity'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'crear'] <- 'Create'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'liderar'] <- 'Leadership'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'identificar'] <- 'Identify'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'analizar'] <- 'Analytical'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'resolver'] <- 'Solving'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'evaluar'] <- 'Evaluate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'equipos'] <- 'Teamwork'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'gestionar'] <- 'Management'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'dirigir'] <- 'Addressing'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'tomar decisiones'] <- 'Decision Making'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'reconocer'] <- 'Acknowledge'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'innovar'] <- 'Innovate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'responsable'] <- 'Accountability'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'pensamiento crítico'] <- 'Critical Thinking'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'comprender'] <- 'Understanding'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'ético'] <- 'Ethical Thinking'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'fortalecer'] <- 'Strength'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'orientar'] <- 'Guidance'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'compartir'] <- 'Sharing'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'fomentar'] <- 'Foment'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'interactuar'] <- 'Social Interaction'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'comunicar'] <- 'Communication'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'flexibilidad'] <- 'Flexibility'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'reflexionar'] <- 'Thoughtfulness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'ayudar'] <- 'Helping others'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'persuasión'] <- 'Persuasiveness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'impulsar'] <- 'Thrust'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'competir'] <- 'Competitiveness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'planificar'] <- 'Planning'
View(Centralities2)
View(Centralities)
View(Centralities)
library(GGally)
load("ResultsbyProgram.RData")
load("ResultsbyAccreditation.RData")
table(Resumen$Freq)
library(dplyr)
SoftSkillsCentrality <- Centralities %>% filter(., grepl('analizar|ayudar|compartir|competir|comprender|comunicar|crear|creatividad|dirigir|equipos|ético|evaluar|flexibilidad|fomentar|fortalecer|generar|gestionar|identificar|impulsar|innovar|interactuar|liderar|orientar|pensamiento crítico|persuasión|planificar|reconocer|reflexionar|resolver|responsable|tomar decisiones', SS))
View(SoftSkillsCentrality)
load("ResultsbyProgram.RData")
load("ResultsbyAccreditation.RData")
table(Resumen$Freq)
library(dplyr)
SoftSkillsCentrality <- Centralities %>% filter(., grepl('analizar|ayudar|compartir|competir|comprender|comunicar|crear|creatividad|dirigir|equipos|ético|evaluar|flexibilidad|fomentar|fortalecer|generar|gestionar|identificar|impulsar|innovar|interactuar|liderar|orientar|pensamiento crítico|persuasión|planificar|reconocer|reflexionar|resolver|responsable|tomar decisiones', SS))
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'generar'] <- 'Generate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'creatividad'] <- 'Creativity'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'crear'] <- 'Create'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'liderar'] <- 'Leadership'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'identificar'] <- 'Identify'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'analizar'] <- 'Analytical'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'resolver'] <- 'Solving'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'evaluar'] <- 'Evaluate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'equipos'] <- 'Teamwork'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'gestionar'] <- 'Management'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'dirigir'] <- 'Addressing'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'tomar decisiones'] <- 'Decision Making'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'reconocer'] <- 'Acknowledge'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'innovar'] <- 'Innovate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'responsable'] <- 'Accountability'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'pensamiento crítico'] <- 'Critical Thinking'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'comprender'] <- 'Understanding'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'ético'] <- 'Ethical Thinking'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'fortalecer'] <- 'Strength'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'orientar'] <- 'Guidance'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'compartir'] <- 'Sharing'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'fomentar'] <- 'Foment'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'interactuar'] <- 'Social Interaction'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'comunicar'] <- 'Communication'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'flexibilidad'] <- 'Flexibility'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'reflexionar'] <- 'Thoughtfulness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'ayudar'] <- 'Helping others'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'persuasión'] <- 'Persuasiveness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'impulsar'] <- 'Thrust'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'competir'] <- 'Competitiveness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'planificar'] <- 'Planning'
dat <- SoftSkillsCentrality[1:5]
options(scipen = 999)
dat <- SoftSkillsCentrality %>% filter(., Level == "Doctorate")
library(datawizard)
dat <- dat %>% mutate(., degree.rescaled = ifelse(Degree == 0, 0.00, rescale(dat$Degree, to = c(0,1))))
dat <- dat %>% mutate(., closeness.rescaled = ifelse(Closeness == 0, 0.00, rescale(dat$Closeness, to = c(0,1))))
dat <- dat %>% mutate(., betweennes.rescaled = ifelse(Betweennes == 0, 0.00, rescale(dat$Betweennes, to = c(0,1))))
dat <- dat %>% mutate(., eigenvector.rescaled = ifelse(Eigen.vector == 0, 0.00, rescale(dat$Eigen.vector, to = c(0,1))))
summary(dat$eigenvector.rescaled)
summary(dat$degree.rescaled)
summary(dat$betweennes.rescaled)
summary(dat$closeness.rescaled)
colnames(dat)
p1 <- ggplot(dat, aes(x = reorder(SS, degree.rescaled), y = degree.rescaled)) +
geom_bar(stat = "identity", fill="lightgreen") + theme_bw() +
theme(axis.text.x=element_text(size=25, colour="black")) +
theme(axis.text.y=element_text(size=25, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=25)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=25)) +
coord_flip() + xlab("Soft Skills") + ylab("Degree Centrality (rescaled 0-1)")
p2 <- ggplot(dat, aes(x = reorder(SS, closeness.rescaled), y = closeness.rescaled)) +
geom_bar(stat = "identity", fill="lightgreen") + theme_bw() +
theme(axis.text.x=element_text(size=25, colour="black")) +
theme(axis.text.y=element_text(size=25, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=25)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=25)) +
coord_flip() + xlab("Soft Skills") + ylab("Closeness Centrality (rescaled 0-1)")
p3 <- ggplot(dat, aes(x = reorder(SS, betweennes.rescaled), y = betweennes.rescaled)) +
geom_bar(stat = "identity", fill="lightgreen") + theme_bw() +
theme(axis.text.x=element_text(size=25, colour="black")) +
theme(axis.text.y=element_text(size=25, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=25)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=25)) +
coord_flip() + xlab("Soft Skills") + ylab("Betweenness Centrality (rescaled 0-1)")
p4 <- ggplot(dat, aes(x = reorder(SS, eigenvector.rescaled), y = eigenvector.rescaled)) +
geom_bar(stat = "identity", fill="lightgreen") + theme_bw() +
theme(axis.text.x=element_text(size=25, colour="black")) +
theme(axis.text.y=element_text(size=25, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=25)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=25)) +
coord_flip() + xlab("Soft Skills") + ylab("Eigenvector Centrality (rescaled 0-1)")
library(ggpubr)
figure <- ggarrange(p1, p2, p3, p4,
labels = c("(A)", "(B)", "(C)", "(D)"),
ncol = 2, nrow = 2)
figure
View(dat)
View(dat)
# Analysis of Soft Skills Centrality
load("ResultsbyProgram.RData")
load("ResultsbyAccreditation.RData")
# Here we found that 31 soft skills are present all across sampled programs
table(Resumen$Freq)
library(dplyr)
SoftSkillsCentrality <- Centralities %>% filter(., grepl('analizar|ayudar|compartir|competir|comprender|comunicar|crear|creatividad|dirigir|equipos|ético|evaluar|flexibilidad|fomentar|fortalecer|generar|gestionar|identificar|impulsar|innovar|interactuar|liderar|orientar|pensamiento crítico|persuasión|planificar|reconocer|reflexionar|resolver|responsable|tomar decisiones', SS))
library(ggplot2)
ggplot(SoftSkillsCentrality, aes(x=reorder(SS, Closeness), y=Closeness)) +
scale_fill_discrete(name="Academic Program") +
geom_point(size=5, aes(colour=Level), alpha=0.6) +
# Use a larger dot
theme_bw() +
theme(axis.text.x = element_text(angle=60, hjust=1),
panel.grid.major.y = element_line(colour="grey60", linetype="dashed"),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(colour="grey60", linetype="dashed"),) +
coord_flip() + theme(legend.position="top") +
theme(axis.text.x=element_text(size=15, colour="black")) +
theme(axis.text.y=element_text(size=15, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=20)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=20)) +
xlab("Soft Skills") +
ylab("Closeness Centrality") +
theme(legend.position=c(0.95,0.1), legend.justification=c(0.95,0.1))
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'generar'] <- 'Generate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'creatividad'] <- 'Creativity'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'crear'] <- 'Create'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'liderar'] <- 'Leadership'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'identificar'] <- 'Identify'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'analizar'] <- 'Analytical'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'resolver'] <- 'Solving'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'evaluar'] <- 'Evaluate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'equipos'] <- 'Teamwork'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'gestionar'] <- 'Management'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'dirigir'] <- 'Addressing'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'tomar decisiones'] <- 'Decision Making'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'reconocer'] <- 'Acknowledge'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'innovar'] <- 'Innovate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'responsable'] <- 'Accountability'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'pensamiento crítico'] <- 'Critical Thinking'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'comprender'] <- 'Understanding'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'ético'] <- 'Ethical Thinking'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'fortalecer'] <- 'Strength'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'orientar'] <- 'Guidance'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'compartir'] <- 'Sharing'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'fomentar'] <- 'Foment'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'interactuar'] <- 'Social Interaction'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'comunicar'] <- 'Communication'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'flexibilidad'] <- 'Flexibility'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'reflexionar'] <- 'Thoughtfulness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'ayudar'] <- 'Helping others'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'persuasión'] <- 'Persuasiveness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'impulsar'] <- 'Thrust'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'competir'] <- 'Competitiveness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'planificar'] <- 'Planning'
library(ggplot2)
p <- ggplot(SoftSkillsCentrality, aes(x=reorder(SS, Eigen.vector), y=Eigen.vector)) +
scale_fill_discrete(name="Academic Program") +
geom_point(size=5, aes(colour=Level), alpha=0.6) +
# Use a larger dot
theme_bw() +
theme(axis.text.x = element_text(angle=60, hjust=1),
panel.grid.major.y = element_line(colour="grey60", linetype="dashed"),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(colour="grey60", linetype="dashed"),) +
coord_flip() + theme(legend.position="top") +
theme(axis.text.x=element_text(size=25, colour="black")) +
theme(axis.text.y=element_text(size=25, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=25)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=25)) +
xlab("Soft Skills") +
ylab("Eigenvector Centrality") +
theme(legend.title=element_text(size=20), legend.text = element_text(size = 20), legend.position=c(0.95,0.1), legend.justification=c(0.95,0.1))
p + labs(color = "Program Type")
=======
# Figure Panel A
Network <- Data_Figure2
bn2 <- graph.data.frame(Network,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "green", "red")
V(bn2)$shape <- ifelse(V(bn2)$type, "square", "circle")
V(bn2)$label.cex <- ifelse(V(bn2)$type, 0.5, 1)
V(bn2)$size <- sqrt(igraph::degree(bn2))
E(bn2)$color <- "lightgrey"
library(readr)
Data_Figure2 <- read_csv("Data_Figure2.csv")
View(Data_Figure2)
library(igraph)
# Figure Panel A
Network <- Data_Figure2
bn2 <- graph.data.frame(Network,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "green", "red")
V(bn2)$shape <- ifelse(V(bn2)$type, "square", "circle")
V(bn2)$label.cex <- ifelse(V(bn2)$type, 0.5, 1)
V(bn2)$size <- sqrt(igraph::degree(bn2))
E(bn2)$color <- "lightgrey"
bn2.pr <- bipartite.projection(bn2)
Programs <- bn2.pr$proj2
Skills <- bn2.pr$proj1
# Plot the network with node colors based on centrality
plot(Skills, vertex.label.color = "black",
vertex.label.cex = 1.5,
vertex.color = "lightgreen",
vertex.size = 60,
edge.width = 3.5,
edge.color = "gray30",
layout = layout_components, main = "")
class(Skills)
Skills
matw1 <- as.matrix(get.adjacency(Skills))
View(matw1)
View(matw1)
>>>>>>> e413ff6000721643e676313c5bad36e430815ebf
