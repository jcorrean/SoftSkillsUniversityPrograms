plot(Terms, vertex.label.color = "black", vertex.label.cex = 0.8, vertex.color = node_colors, vertex.size = 15, edge.width = 0.5, edge.color = "lightgray", layout = layout_components, main = "")
load("DataForFigure4.RData")
rm(list=setdiff(ls(), "SkillsProgramsCentrality"))
load("DataForFigure4.RData")
rm(list=setdiff(ls(), "TODAS"))
TODAS$keyword <- tolower(TODAS$keyword)
TODAS[TODAS=="acercar"] <- "S1"
TODAS[TODAS=="analizar"] <- "S2"
TODAS[TODAS=="argumentar"] <- "S3"
TODAS[TODAS=="ayudar"] <- "S4"
TODAS[TODAS=="cambiar"] <- "S5"
TODAS[TODAS=="compartir"] <- "S6"
TODAS[TODAS=="competir"] <- "S7"
TODAS[TODAS=="comprender"] <- "S8"
TODAS[TODAS=="comprometerse"] <- "S9"
TODAS[TODAS=="comunicar"] <- "S10"
TODAS[TODAS=="conflictos"] <- "S11"
TODAS[TODAS=="controlar"] <- "S12"
TODAS[TODAS=="crear"] <- "S13"
TODAS[TODAS=="creatividad"] <- "S14"
TODAS[TODAS=="decidir"] <- "S15"
TODAS[TODAS=="dirigir"] <- "S16"
TODAS[TODAS=="empatía"] <- "S17"
TODAS[TODAS=="equipos"] <- "S18"
TODAS[TODAS=="ético"] <- "S19"
TODAS[TODAS=="evaluar"] <- "S20"
TODAS[TODAS=="flexibilidad"] <- "S21"
TODAS[TODAS=="fomentar"] <- "S22"
TODAS[TODAS=="fortalecer"] <- "S23"
TODAS[TODAS=="generar"] <- "S24"
TODAS[TODAS=="gestionar"] <- "S25"
TODAS[TODAS=="identificar"] <- "S26"
TODAS[TODAS=="impulsar"] <- "S27"
TODAS[TODAS=="innovar"] <- "S28"
TODAS[TODAS=="interactuar"] <- "S29"
TODAS[TODAS=="liderar"] <- "S30"
TODAS[TODAS=="manifestar"] <- "S31"
TODAS[TODAS=="motivar"] <- "S32"
TODAS[TODAS=="orientar"] <- "S33"
TODAS[TODAS=="pensamiento crítico"] <- "S34"
TODAS[TODAS=="persuasión"] <- "S35"
TODAS[TODAS=="planificar"] <- "S36"
TODAS[TODAS=="reconocer"] <- "S37"
TODAS[TODAS=="reflexionar"] <- "S38"
TODAS[TODAS=="resolver"] <- "S39"
TODAS[TODAS=="respetar"] <- "S40"
TODAS[TODAS=="responsable"] <- "S41"
TODAS[TODAS=="solucionar problemas"] <- "S42"
TODAS[TODAS=="tomar decisiones"] <- "S43"
# Figure Panel A
Network <- TODAS[,c(1,5)]
table(Network$keyword)
Network <- Network[!duplicated(Network[c(1,2)]),]
library(igraph)
bn2 <- graph.data.frame(Network,directed=FALSE)
bipartite.mapping(bn2)
V(bn2)$type <- bipartite_mapping(bn2)$type
V(bn2)$color <- ifelse(V(bn2)$type, "red", "green")
V(bn2)$shape <- ifelse(V(bn2)$type, "circle", "square")
V(bn2)$label.cex <- ifelse(V(bn2)$type, 0.5, 1)
V(bn2)$size <- sqrt(igraph::degree(bn2))
E(bn2)$color <- "lightgrey"
bn2.pr <- bipartite.projection(bn2)
Terms <- bn2.pr$proj2
centrality_scores <- degree(Terms)
# Normalize the centrality scores to a range between 0 and 1
normalized_scores <- (centrality_scores - min(centrality_scores)) / (max(centrality_scores) - min(centrality_scores))
# Create a color palette with different colors
color_palette <- colorRampPalette(c("red", "pink", "lightgreen", "green"))(length(unique(normalized_scores)))
# Assign colors to nodes based on their normalized centrality scores
node_colors <- color_palette[rank(normalized_scores)]
# Plot the network with node colors based on centrality
plot(Terms, vertex.label.color = "black", vertex.label.cex = 0.8, vertex.color = node_colors, vertex.size = 15, edge.width = 0.5, edge.color = "lightgray", layout = layout_components, main = "")
View(Network)
View(TODAS)
View(bn2.pr)
Terms
centrality_scores
# Analysis by Program Level
#Spec <- Spec %>% select(., "docname", "keyword")
#MS <- MS %>% select(., "docname", "keyword")
#PhD <- PhD %>% select(., "docname", "keyword")
load("PreProcessing.RData")
rm(list=setdiff(ls(), "TODAS2"))
TODAS2$keyword <- tolower(TODAS2$keyword)
View(TODAS2)
View(TODAS2)
load("PreProcessing.RData")
rm(list=setdiff(ls(), "TODAS2"))
TODAS2$keyword <- tolower(TODAS2$keyword)
library(dplyr)
SpecPrograms <- TODAS2 %>% filter(., Program=="Specialization") %>%
select(., docname, keyword)
MasterPrograms <- TODAS2 %>% filter(., Program=="Masters") %>%
select(., docname, keyword)
DoctoratePrograms <- TODAS2 %>% filter(., Program == "Doctorate") %>%
select(., docname, keyword)
library(igraph)
BNS <- graph.data.frame(SpecPrograms, directed = FALSE)
BNM <- graph.data.frame(MasterPrograms, directed = FALSE)
BND <- graph.data.frame(DoctoratePrograms, directed = FALSE)
hist(degree_distribution(BNS))
hist(degree_distribution(BNM))
hist(degree_distribution(BND))
Spec <- data.frame(Degree = igraph::degree(BNS),
Closeness = igraph::closeness(BNS),
Betweennes = igraph::betweenness(BNS),
Eigen = igraph::eigen_centrality(BNS))
Spec <- Spec[ -c(5:25) ]
rownames(Spec)
Spec <- Spec[97:135,]
Spec$SS <- rownames(Spec)
Spec$Level <- "Specialization"
MS <- data.frame(Degree = igraph::degree(BNM),
Closeness = igraph::closeness(BNM),
Betweennes = igraph::betweenness(BNM),
Eigen = igraph::eigen_centrality(BNM))
MS <- MS[ -c(5:25) ]
rownames(MS)
MS <- MS[83:118,]
MS$SS <- rownames(MS)
load("PreProcessing.RData")
rm(list=setdiff(ls(), "TODAS2"))
TODAS2$keyword <- tolower(TODAS2$keyword)
library(dplyr)
SpecPrograms <- TODAS2 %>% filter(., Program=="Specialization") %>%
select(., docname, keyword)
MasterPrograms <- TODAS2 %>% filter(., Program=="Masters") %>%
select(., docname, keyword)
DoctoratePrograms <- TODAS2 %>% filter(., Program == "Doctorate") %>%
select(., docname, keyword)
library(igraph)
BNS <- graph.data.frame(SpecPrograms, directed = FALSE)
BNM <- graph.data.frame(MasterPrograms, directed = FALSE)
BND <- graph.data.frame(DoctoratePrograms, directed = FALSE)
hist(degree_distribution(BNS))
hist(degree_distribution(BNM))
hist(degree_distribution(BND))
hist(degree_distribution(BNM))
MasterPrograms <- TODAS2 %>% filter(., Program=="Master") %>%
select(., docname, keyword)
DoctoratePrograms <- TODAS2 %>% filter(., Program == "Doctorate") %>%
select(., docname, keyword)
library(igraph)
BNS <- graph.data.frame(SpecPrograms, directed = FALSE)
BNM <- graph.data.frame(MasterPrograms, directed = FALSE)
BND <- graph.data.frame(DoctoratePrograms, directed = FALSE)
hist(degree_distribution(BNS))
hist(degree_distribution(BNM))
hist(degree_distribution(BND))
Spec <- data.frame(Degree = igraph::degree(BNS),
Closeness = igraph::closeness(BNS),
Betweennes = igraph::betweenness(BNS),
Eigen = igraph::eigen_centrality(BNS))
Spec <- Spec[ -c(5:25) ]
rownames(Spec)
Spec <- Spec[97:135,]
Spec$SS <- rownames(Spec)
Spec$Level <- "Specialization"
MS <- data.frame(Degree = igraph::degree(BNM),
Closeness = igraph::closeness(BNM),
Betweennes = igraph::betweenness(BNM),
Eigen = igraph::eigen_centrality(BNM))
MS <- MS[ -c(5:25) ]
rownames(MS)
MS <- MS[83:118,]
MS$SS <- rownames(MS)
MS$Level <- "Master"
Doc <- data.frame(Degree = igraph::degree(BND),
Closeness = igraph::closeness(BND),
Betweennes = igraph::betweenness(BND),
Eigen = igraph::eigen_centrality(BND))
Doc <- Doc[ -c(5:25) ]
rownames(Doc)
Doc <- Doc[26:58,]
Doc$SS <- rownames(Doc)
Doc$Level <- "Doctorate"
Centralities <- list(Spec, MS, Doc)
Centralities <- as.data.frame(do.call(rbind, Centralities))
View(Centralities)
load("PreProcessing.RData")
rm(list=setdiff(ls(), "TODAS2"))
TODAS2$keyword <- tolower(TODAS2$keyword)
library(dplyr)
SpecPrograms <- TODAS2 %>% filter(., Program=="Specialization") %>%
select(., docname, keyword)
MasterPrograms <- TODAS2 %>% filter(., Program=="Master") %>%
select(., docname, keyword)
DoctoratePrograms <- TODAS2 %>% filter(., Program == "Doctorate") %>%
select(., docname, keyword)
library(igraph)
BNS <- graph.data.frame(SpecPrograms, directed = FALSE)
BNM <- graph.data.frame(MasterPrograms, directed = FALSE)
BND <- graph.data.frame(DoctoratePrograms, directed = FALSE)
hist(degree_distribution(BNS))
hist(degree_distribution(BNM))
hist(degree_distribution(BND))
Spec <- data.frame(Degree = igraph::degree(BNS),
Closeness = igraph::closeness(BNS),
Betweennes = igraph::betweenness(BNS),
Eigen = igraph::eigen_centrality(BNS))
View(Spec)
Spec$Degree[100]
Spec[100]
Spec[[100]]
Spec <- Spec[ -c(5:25) ]
View(Spec)
rownames(Spec)
View(Spec)
Spec$SS <- rownames(Spec)
View(Spec)
Spec <- Spec[order(Spec$SS), ]
View(Spec)
Spec$SS[100]
Spec$SS[101]
Spec <- Spec[101:140,]
Spec$Level <- "Specialization"
View(Spec)
MS <- data.frame(Degree = igraph::degree(BNM),
Closeness = igraph::closeness(BNM),
Betweennes = igraph::betweenness(BNM),
Eigen = igraph::eigen_centrality(BNM))
MS <- MS[ -c(5:25) ]
View(MS)
MS$SS <- rownames(MS)
MS <- MS[order(MS$SS), ]
View(MS)
MS$SS[73]
MS$SS[74]
MS <- MS[74:105,]
View(MS)
MS$Level <- "Master"
Doc <- data.frame(Degree = igraph::degree(BND),
Closeness = igraph::closeness(BND),
Betweennes = igraph::betweenness(BND),
Eigen = igraph::eigen_centrality(BND))
Doc <- Doc[ -c(5:25) ]
rownames(Doc)
rownames(Doc)
View(Doc)
Doc$SS <- rownames(MS)
Doc$SS <- rownames(Doc)
View(Doc)
Doc <- Doc[order(Doc$SS), ]
rownames(Doc)
Doc <- Doc[31:60,]
Doc$Level <- "Doctorate"
Centralities <- list(Spec, MS, Doc)
Centralities <- as.data.frame(do.call(rbind, Centralities))
View(Centralities)
Resumen <- data.frame(table(Centralities$SS))
library(ggridges)
library(ggplot2)
# basic example
ggplot(Centralities, aes(x = Eigen.vector, y = Level, fill = Level)) +
geom_density_ridges(alpha = 0.3) +
theme_ridges() +
theme(legend.position = "none") +
xlab("Eigenvector Centrality") +
ylab("Academic Program") +
theme(axis.text.x=element_text(size=15)) +
theme(axis.text.y=element_text(size=15)) +
theme(axis.title.x=element_text(face="italic", colour="black", size=20)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=20))
IM <- as_incidence_matrix(BNS, names = TRUE, sparse = TRUE, types = bipartite_mapping(BNS)$type)
IM2 <- as.matrix(IM)
bipartite.mapping(BNS)
V(BNS)$type <- bipartite_mapping(BNS)$type
V(BNS)$color <- ifelse(V(BNS)$type, "red", "green")
V(BNS)$shape <- ifelse(V(BNS)$type, "circle", "square")
V(BNS)$label.cex <- ifelse(V(BNS)$type, 0.8, 1)
V(BNS)$size <- sqrt(igraph::degree(BNS))
E(BNS)$color <- "lightgrey"
plot(BNS,
vertex.label = NA,
layout = layout_in_circle,
main = "")
plot(BNS,
vertex.label = NA,
layout = layout_as_bipartite,
main = "")
plot(BNS,
vertex.label = NA,
layout = layout_as_tree,
main = "")
library(bipartite)
plotweb(IM2, method = "normal", col.high = "lightgreen", col.low = "pink", col.interaction = "lightgrey")
bipartite::visweb(IM2)
View(Centralities)
View(TODAS2)
General <- TODAS2 %>% select(., docname, keyword)
View(General)
General <- graph.data.frame(General, directed = FALSE)
hist(degree_distribution(General))
Gen <- data.frame(Degree = igraph::degree(General),
Closeness = igraph::closeness(General),
Betweennes = igraph::betweenness(General),
Eigen = igraph::eigen_centrality(General))
Gen <- Gen[ -c(5:25) ]
rownames(Gen)
Gen$SS <- rownames(Gen)
Gen <- Gen[order(Gen$SS), ]
rownames(Gen)
Gen$SS[203]
Gen$SS[204]
Gen <- Gen[204:246,]
Centralities <- list(Spec, MS, Doc)
Centralities <- as.data.frame(do.call(rbind, Centralities))
Resumen <- data.frame(table(Centralities$SS))
library(ggridges)
library(ggplot2)
# basic example
ggplot(Centralities, aes(x = Eigen.vector, y = Level, fill = Level)) +
geom_density_ridges(alpha = 0.3) +
theme_ridges() +
theme(legend.position = "none") +
xlab("Eigenvector Centrality") +
ylab("Academic Program") +
theme(axis.text.x=element_text(size=15)) +
theme(axis.text.y=element_text(size=15)) +
theme(axis.title.x=element_text(face="italic", colour="black", size=20)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=20))
IM <- as_incidence_matrix(General, names = TRUE, sparse = TRUE, types = bipartite_mapping(BNS)$type)
General
IM <- as_incidence_matrix(General, names = TRUE, sparse = TRUE, types = bipartite_mapping(BNS)$type)
IM <- as_incidence_matrix(BNS, names = TRUE, sparse = TRUE, types = bipartite_mapping(BNS)$type)
IM2 <- as.matrix(IM)
IM <- as_incidence_matrix(General, names = TRUE, sparse = TRUE, types = bipartite_mapping(BNS)$type)
BNA <- graph.data.frame(General, directed = FALSE)
load("PreProcessing.RData")
rm(list=setdiff(ls(), "TODAS2"))
TODAS2$keyword <- tolower(TODAS2$keyword)
library(dplyr)
SpecPrograms <- TODAS2 %>% filter(., Program=="Specialization") %>%
select(., docname, keyword)
MasterPrograms <- TODAS2 %>% filter(., Program=="Master") %>%
select(., docname, keyword)
DoctoratePrograms <- TODAS2 %>% filter(., Program == "Doctorate") %>%
select(., docname, keyword)
General <- TODAS2 %>% select(., docname, keyword)
library(igraph)
BNS <- graph.data.frame(SpecPrograms, directed = FALSE)
BNM <- graph.data.frame(MasterPrograms, directed = FALSE)
BND <- graph.data.frame(DoctoratePrograms, directed = FALSE)
BNA <- graph.data.frame(General, directed = FALSE)
hist(degree_distribution(BNS))
hist(degree_distribution(BNM))
hist(degree_distribution(BND))
hist(degree_distribution(BNA))
Spec <- data.frame(Degree = igraph::degree(BNS),
Closeness = igraph::closeness(BNS),
Betweennes = igraph::betweenness(BNS),
Eigen = igraph::eigen_centrality(BNS))
Spec <- Spec[ -c(5:25) ]
rownames(Spec)
Spec$SS <- rownames(Spec)
Spec <- Spec[order(Spec$SS), ]
Spec <- Spec[101:140,]
Spec$Level <- "Specialization"
MS <- data.frame(Degree = igraph::degree(BNM),
Closeness = igraph::closeness(BNM),
Betweennes = igraph::betweenness(BNM),
Eigen = igraph::eigen_centrality(BNM))
MS <- MS[ -c(5:25) ]
rownames(MS)
MS$SS <- rownames(MS)
MS <- MS[order(MS$SS), ]
MS <- MS[74:105,]
MS$Level <- "Master"
Doc <- data.frame(Degree = igraph::degree(BND),
Closeness = igraph::closeness(BND),
Betweennes = igraph::betweenness(BND),
Eigen = igraph::eigen_centrality(BND))
Doc <- Doc[ -c(5:25) ]
rownames(Doc)
Doc$SS <- rownames(Doc)
Doc <- Doc[order(Doc$SS), ]
Doc <- Doc[31:60,]
Doc$Level <- "Doctorate"
Gen <- data.frame(Degree = igraph::degree(General),
Closeness = igraph::closeness(General),
Betweennes = igraph::betweenness(General),
Eigen = igraph::eigen_centrality(General))
Gen <- data.frame(Degree = igraph::degree(BNA),
Closeness = igraph::closeness(BNA),
Betweennes = igraph::betweenness(BNA),
Eigen = igraph::eigen_centrality(BNA))
Gen <- Gen[ -c(5:25) ]
rownames(Gen)
Gen$SS <- rownames(Gen)
Gen <- Gen[order(Gen$SS), ]
Gen <- Gen[204:246,]
Centralities <- list(Spec, MS, Doc)
Centralities <- as.data.frame(do.call(rbind, Centralities))
Resumen <- data.frame(table(Centralities$SS))
library(ggridges)
library(ggplot2)
ggplot(Centralities, aes(x = Eigen.vector, y = Level, fill = Level)) +
geom_density_ridges(alpha = 0.3) +
theme_ridges() +
theme(legend.position = "none") +
xlab("Eigenvector Centrality") +
ylab("Academic Program") +
theme(axis.text.x=element_text(size=15)) +
theme(axis.text.y=element_text(size=15)) +
theme(axis.title.x=element_text(face="italic", colour="black", size=20)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=20))
IM <- as_incidence_matrix(BNA, names = TRUE, sparse = TRUE, types = bipartite_mapping(BNS)$type)
IM <- as_incidence_matrix(BNA, names = TRUE, sparse = TRUE, types = bipartite_mapping(BNA)$type)
IM2 <- as.matrix(IM)
bipartite.mapping(BNA)
V(BNA)$type <- bipartite_mapping(BNA)$type
V(BNA)$color <- ifelse(V(BNA)$type, "red", "green")
V(BNA)$shape <- ifelse(V(BNA)$type, "circle", "square")
V(BNA)$label.cex <- ifelse(V(BNA)$type, 0.8, 1)
V(BNA)$size <- sqrt(igraph::degree(BNA))
E(BNA)$color <- "lightgrey"
plot(BNA,
vertex.label = NA,
layout = layout_as_tree,
main = "")
library(bipartite)
plotweb(IM2, method = "normal", col.high = "lightgreen", col.low = "pink", col.interaction = "lightgrey")
View(Centralities)
save.image("~/Documents/GitHub/SoftSkillsUniversityPrograms/DataForFigure4B.RData")
save.image("DataForFigure4B.RData")
load("DataForFigure4B.RData")
rm(list=setdiff(ls(), "Centralities"))
View(Centralities)
load("DataForFigure4B.RData")
View(Gen)
rm(list=setdiff(ls(), "Gen"))
Gen <- Gen[1:4]
library(psych)
pairs.panels(Gen,
method = "spearman",
hist.col = "green",
density = TRUE,
ellipses = TRUE,
pch = 21,
cex = 2.5,
cex.axis = 1.8,
cex.labels = 4.5,
lwd = 2,
rug = TRUE,
stars = TRUE
)
pairs.panels(Gen,
method = "spearman",
hist.col = "green",
density = TRUE,
ellipses = TRUE,
pch = 21,
cex = 2.5,
cex.axis = 1.8,
cex.labels = 3.5,
lwd = 2,
rug = TRUE,
stars = TRUE
)
pairs.panels(Gen,
method = "spearman",
hist.col = "green",
density = TRUE,
ellipses = TRUE,
pch = 15,
cex = 2.5,
cex.axis = 1.8,
cex.labels = 3.5,
lwd = 2,
rug = TRUE,
stars = TRUE
)
pairs.panels(Gen,
method = "spearman",
hist.col = "green",
density = TRUE,
ellipses = TRUE,
pch = 15,
cex = 2.5,
cex.axis = 1.8,
cex.labels = 2.5,
lwd = 2,
rug = TRUE,
stars = TRUE
)
pairs.panels(Gen,
method = "spearman",
hist.col = "green",
density = TRUE,
ellipses = TRUE,
pch = 15,
cex = 2.5,
cex.axis = 1.8,
cex.labels = 1.5,
lwd = 2,
rug = TRUE,
stars = TRUE
)
pairs.panels(Gen,
method = "spearman",
hist.col = "green",
density = TRUE,
ellipses = TRUE,
pch = 15,
cex = 1.5,
cex.axis = 1.8,
cex.labels = 2.5,
lwd = 2,
rug = TRUE,
stars = TRUE
)
