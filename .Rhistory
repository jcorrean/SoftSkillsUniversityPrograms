Doc$SS <- rownames(Doc)
Doc <- Doc[order(Doc$SS), ]
Doc <- Doc[31:60,]
Doc$Level <- "Doctorate"
Gen <- data.frame(Degree = igraph::degree(BNA),
Closeness = igraph::closeness(BNA),
Betweennes = igraph::betweenness(BNA),
Eigen = igraph::eigen_centrality(BNA))
Gen <- Gen[ -c(5:25) ]
rownames(Gen)
Gen$SS <- rownames(Gen)
Gen <- Gen[order(Gen$SS), ]
Gen <- Gen[204:246,]
Centralities <- list(Spec, MS, Doc)
Centralities <- as.data.frame(do.call(rbind, Centralities))
Resumen <- data.frame(table(Centralities$SS))
library(ggridges)
library(ggplot2)
ggplot(Centralities, aes(x = Eigen.vector, y = Level, fill = Level)) +
geom_density_ridges(alpha = 0.3) +
theme_ridges() +
theme(legend.position = "none") +
xlab("Eigenvector Centrality") +
ylab("Academic Program") +
theme(axis.text.x=element_text(size=15)) +
theme(axis.text.y=element_text(size=15)) +
theme(axis.title.x=element_text(face="italic", colour="black", size=20)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=20))
IM <- as_incidence_matrix(BNA, names = TRUE, sparse = TRUE, types = bipartite_mapping(BNA)$type)
IM2 <- as.matrix(IM)
bipartite.mapping(BNA)
V(BNA)$type <- bipartite_mapping(BNA)$type
V(BNA)$color <- ifelse(V(BNA)$type, "red", "green")
V(BNA)$shape <- ifelse(V(BNA)$type, "circle", "square")
V(BNA)$label.cex <- ifelse(V(BNA)$type, 0.8, 1)
V(BNA)$size <- sqrt(igraph::degree(BNA))
E(BNA)$color <- "lightgrey"
plot(BNA,
vertex.label = NA,
layout = layout_as_tree,
main = "")
library(bipartite)
plotweb(IM2, method = "normal", col.high = "lightgreen", col.low = "pink", col.interaction = "lightgrey")
bipartite::visweb(IM2)
save.image("DataForFigure4B.RData")
# Analysis by Accreditation Type
load("PreProcessing.RData")
rm(list=setdiff(ls(), "TODAS2"))
View(TODAS2)
TODAS2$keyword <- tolower(TODAS2$keyword)
library(dplyr)
# Let's go first with programs with qualified certification
QC <- TODAS2 %>% filter(., Accreditation=="Qualified Certification") %>%
select(., docname, keyword)
# Then, let's go with programs with High-Quality Accreditation
HQA <- TODAS2 %>% filter(., Accreditation=="High-Quality Certification") %>%
select(., docname, keyword)
library(igraph)
BNQC <- graph.data.frame(QC, directed = FALSE)
BNHQA <- graph.data.frame(HQA, directed = FALSE)
hist(degree_distribution(BNQC))
hist(degree_distribution(BNHQA))
QC <- data.frame(Degree = igraph::degree(BNQC),
Closeness = igraph::closeness(BNQC),
Betweennes = igraph::betweenness(BNQC),
Eigen = igraph::eigen_centrality(BNQC))
QC <- QC[ -c(5:25) ]
rownames(QC)
QC <- QC[182:223,]
QC$SS <- rownames(QC)
QC$Accreditation <- "Qualified Certification"
View(QC)
HQA <- data.frame(Degree = igraph::degree(BNHQA),
Closeness = igraph::closeness(BNHQA),
Betweennes = igraph::betweenness(BNHQA),
Eigen = igraph::eigen_centrality(BNHQA))
HQA <- HQA[ -c(5:25) ]
rownames(HQA)
HQA <- HQA[23:54,]
HQA$SS <- rownames(HQA)
HQA$Accreditation <- "High-Quality Certification"
Centralities2 <- list(HQA, QC)
Centralities2 <- as.data.frame(do.call(rbind, Centralities2))
Resumen2 <- data.frame(table(Centralities2$SS))
library(ggridges)
library(ggplot2)
ggplot(Centralities2, aes(x = Eigen.vector, y = Accreditation, fill = Accreditation)) +
geom_density_ridges(alpha = 0.3) +
theme_ridges() +
theme(legend.position = "none") +
xlab("Eigenvector Centrality") +
ylab("Type of Accreditation")
IM <- as_incidence_matrix(BNHQA, names = TRUE, sparse = TRUE, types = bipartite_mapping(BNHQA)$type)
IM2 <- as.matrix(IM)
bipartite.mapping(BNHQA)
V(BNHQA)$type <- bipartite_mapping(BNHQA)$type
V(BNHQA)$color <- ifelse(V(BNHQA)$type, "red", "green")
V(BNHQA)$shape <- ifelse(V(BNHQA)$type, "circle", "square")
V(BNHQA)$label.cex <- ifelse(V(BNHQA)$type, 0.8, 1)
V(BNHQA)$size <- sqrt(igraph::degree(BNHQA))
E(BNHQA)$color <- "lightgrey"
plot(BNHQA,
vertex.label = NA,
layout = layout_components,
main = "")
library(ggplot2)
ggplot(Centralities2, aes(x = Eigen.vector, y = Accreditation, fill = Accreditation)) +
geom_density_ridges(alpha = 0.3) +
theme_ridges() +
theme(legend.position = "none") +
xlab("Eigenvector Centrality") +
ylab("Type of Accreditation") +
theme(axis.text.x=element_text(size=15)) +
theme(axis.text.y=element_text(size=15)) +
theme(axis.title.x=element_text(face="italic", colour="black", size=20)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=20))
library(bipartite)
plotweb(IM2, method = "normal", col.high = "lightgreen", col.low = "pink", col.interaction = "lightgrey")
save.image("~/Documents/GitHub/SoftSkillsUniversityPrograms/ResultsbyAccreditation.RData")
# Analysis of Soft Skills Centrality
load("ResultsbyProgram.RData")
load("ResultsbyAccreditation.RData")
# Here we found that 31 soft skills are present all across sampled programs
table(Resumen$Freq)
library(dplyr)
SoftSkillsCentrality <- Centralities %>% filter(., grepl('analizar|ayudar|compartir|competir|comprender|comunicar|crear|creatividad|dirigir|equipos|ético|evaluar|flexibilidad|fomentar|fortalecer|generar|gestionar|identificar|impulsar|innovar|interactuar|liderar|orientar|pensamiento crítico|persuasión|planificar|reconocer|reflexionar|resolver|responsable|tomar decisiones', SS))
boxplot(SoftSkillsCentrality$Closeness, xlab = "Closeness")
boxplot(SoftSkillsCentrality$Betweennes, xlab = "Betweennes")
boxplot(SoftSkillsCentrality$Degree,  xlab = "Degree")
boxplot(SoftSkillsCentrality$Eigen.vector, xlab = "Eigenvector")
boxplot(SoftSkillsCentrality[c(2,4)])
library(ggplot2)
ggplot(SoftSkillsCentrality, aes(x=reorder(SS, Closeness), y=Closeness)) +
scale_fill_discrete(name="Academic Program") +
geom_point(size=5, aes(colour=Level), alpha=0.6) +
# Use a larger dot
theme_bw() +
theme(axis.text.x = element_text(angle=60, hjust=1),
panel.grid.major.y = element_line(colour="grey60", linetype="dashed"),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(colour="grey60", linetype="dashed"),) +
coord_flip() + theme(legend.position="top") +
theme(axis.text.x=element_text(size=15, colour="black")) +
theme(axis.text.y=element_text(size=15, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=20)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=20)) +
xlab("Soft Skills") +
ylab("Closeness Centrality") +
theme(legend.position=c(0.95,0.1), legend.justification=c(0.95,0.1))
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'generar'] <- 'Generate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'creatividad'] <- 'Creativity'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'crear'] <- 'Create'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'liderar'] <- 'Leadership'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'identificar'] <- 'Identify'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'analizar'] <- 'Analytical'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'resolver'] <- 'Solving'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'evaluar'] <- 'Evaluate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'equipos'] <- 'Teamwork'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'gestionar'] <- 'Management'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'dirigir'] <- 'Addressing'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'tomar decisiones'] <- 'Decision Making'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'reconocer'] <- 'Acknowledge'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'innovar'] <- 'Innovate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'responsable'] <- 'Accountability'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'pensamiento crítico'] <- 'Critical Thinking'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'comprender'] <- 'Understanding'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'ético'] <- 'Ethical Thinking'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'fortalecer'] <- 'Strength'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'orientar'] <- 'Guidance'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'compartir'] <- 'Sharing'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'fomentar'] <- 'Foment'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'interactuar'] <- 'Social Interaction'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'comunicar'] <- 'Communication'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'flexibilidad'] <- 'Flexibility'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'reflexionar'] <- 'Thoughtfulness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'ayudar'] <- 'Helping others'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'persuasión'] <- 'Persuasiveness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'impulsar'] <- 'Thrust'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'competir'] <- 'Competitiveness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'planificar'] <- 'Planning'
library(ggplot2)
p <- ggplot(SoftSkillsCentrality, aes(x=reorder(SS, Eigen.vector), y=Eigen.vector)) +
scale_fill_discrete(name="Academic Program") +
geom_point(size=5, aes(colour=Level), alpha=0.6) +
# Use a larger dot
theme_bw() +
theme(axis.text.x = element_text(angle=60, hjust=1),
panel.grid.major.y = element_line(colour="grey60", linetype="dashed"),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_line(colour="grey60", linetype="dashed"),) +
coord_flip() + theme(legend.position="top") +
theme(axis.text.x=element_text(size=25, colour="black")) +
theme(axis.text.y=element_text(size=25, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=25)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=25)) +
xlab("Soft Skills") +
ylab("Eigenvector Centrality") +
theme(legend.title=element_text(size=20), legend.text = element_text(size = 20), legend.position=c(0.95,0.1), legend.justification=c(0.95,0.1))
p + labs(color = "Program Type")
library(GGally)
load("ResultsbyProgram.RData")
load("ResultsbyAccreditation.RData")
table(Resumen$Freq)
library(dplyr)
SoftSkillsCentrality <- Centralities %>% filter(., grepl('analizar|ayudar|compartir|competir|comprender|comunicar|crear|creatividad|dirigir|equipos|ético|evaluar|flexibilidad|fomentar|fortalecer|generar|gestionar|identificar|impulsar|innovar|interactuar|liderar|orientar|pensamiento crítico|persuasión|planificar|reconocer|reflexionar|resolver|responsable|tomar decisiones', SS))
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'generar'] <- 'Generate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'creatividad'] <- 'Creativity'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'crear'] <- 'Create'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'liderar'] <- 'Leadership'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'identificar'] <- 'Identify'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'analizar'] <- 'Analytical'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'resolver'] <- 'Solving'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'evaluar'] <- 'Evaluate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'equipos'] <- 'Teamwork'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'gestionar'] <- 'Management'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'dirigir'] <- 'Addressing'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'tomar decisiones'] <- 'Decision Making'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'reconocer'] <- 'Acknowledge'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'innovar'] <- 'Innovate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'responsable'] <- 'Accountability'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'pensamiento crítico'] <- 'Critical Thinking'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'comprender'] <- 'Understanding'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'ético'] <- 'Ethical Thinking'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'fortalecer'] <- 'Strength'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'orientar'] <- 'Guidance'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'compartir'] <- 'Sharing'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'fomentar'] <- 'Foment'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'interactuar'] <- 'Social Interaction'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'comunicar'] <- 'Communication'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'flexibilidad'] <- 'Flexibility'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'reflexionar'] <- 'Thoughtfulness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'ayudar'] <- 'Helping others'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'persuasión'] <- 'Persuasiveness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'impulsar'] <- 'Thrust'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'competir'] <- 'Competitiveness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'planificar'] <- 'Planning'
dat <- SoftSkillsCentrality[1:5]
options(scipen = 999)
dat <- SoftSkillsCentrality %>% filter(., Level == "Doctorate")
library(datawizard)
dat <- dat %>% mutate(., degree.rescaled = ifelse(Degree == 0, 0.00, rescale(dat$Degree, to = c(0,1))))
dat <- dat %>% mutate(., closeness.rescaled = ifelse(Closeness == 0, 0.00, rescale(dat$Closeness, to = c(0,1))))
dat <- dat %>% mutate(., betweennes.rescaled = ifelse(Betweennes == 0, 0.00, rescale(dat$Betweennes, to = c(0,1))))
dat <- dat %>% mutate(., eigenvector.rescaled = ifelse(Eigen.vector == 0, 0.00, rescale(dat$Eigen.vector, to = c(0,1))))
summary(dat$eigenvector.rescaled)
summary(dat$degree.rescaled)
summary(dat$betweennes.rescaled)
summary(dat$closeness.rescaled)
colnames(dat)
p1 <- ggplot(dat, aes(x = reorder(SS, degree.rescaled), y = degree.rescaled)) +
geom_bar(stat = "identity", fill="lightgreen") + theme_bw() +
theme(axis.text.x=element_text(size=25, colour="black")) +
theme(axis.text.y=element_text(size=25, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=25)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=25)) +
coord_flip() + xlab("Soft Skills") + ylab("Degree Centrality (rescaled 0-1)")
p2 <- ggplot(dat, aes(x = reorder(SS, closeness.rescaled), y = closeness.rescaled)) +
geom_bar(stat = "identity", fill="lightgreen") + theme_bw() +
theme(axis.text.x=element_text(size=25, colour="black")) +
theme(axis.text.y=element_text(size=25, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=25)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=25)) +
coord_flip() + xlab("Soft Skills") + ylab("Closeness Centrality (rescaled 0-1)")
p3 <- ggplot(dat, aes(x = reorder(SS, betweennes.rescaled), y = betweennes.rescaled)) +
geom_bar(stat = "identity", fill="lightgreen") + theme_bw() +
theme(axis.text.x=element_text(size=25, colour="black")) +
theme(axis.text.y=element_text(size=25, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=25)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=25)) +
coord_flip() + xlab("Soft Skills") + ylab("Betweenness Centrality (rescaled 0-1)")
p4 <- ggplot(dat, aes(x = reorder(SS, eigenvector.rescaled), y = eigenvector.rescaled)) +
geom_bar(stat = "identity", fill="lightgreen") + theme_bw() +
theme(axis.text.x=element_text(size=25, colour="black")) +
theme(axis.text.y=element_text(size=25, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=25)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=25)) +
coord_flip() + xlab("Soft Skills") + ylab("Eigenvector Centrality (rescaled 0-1)")
library(ggpubr)
figure <- ggarrange(p1, p2, p3, p4,
labels = c("(A)", "(B)", "(C)", "(D)"),
ncol = 2, nrow = 2)
figure
load("PreProcessing.RData")
rm(list=setdiff(ls(), "TODAS2"))
TODAS2$keyword <- tolower(TODAS2$keyword)
library(dplyr)
SpecPrograms <- TODAS2 %>% filter(., Program=="Specialization") %>%
select(., docname, keyword)
MasterPrograms <- TODAS2 %>% filter(., Program=="Master") %>%
select(., docname, keyword)
DoctoratePrograms <- TODAS2 %>% filter(., Program == "Doctorate") %>%
select(., docname, keyword)
General <- TODAS2 %>% select(., docname, keyword)
library(igraph)
BNS <- graph.data.frame(SpecPrograms, directed = FALSE)
BNM <- graph.data.frame(MasterPrograms, directed = FALSE)
BND <- graph.data.frame(DoctoratePrograms, directed = FALSE)
BNA <- graph.data.frame(General, directed = FALSE)
hist(degree_distribution(BNS))
hist(degree_distribution(BNM))
hist(degree_distribution(BND))
hist(degree_distribution(BNA))
Spec <- data.frame(Degree = igraph::degree(BNS),
Closeness = igraph::closeness(BNS),
Betweennes = igraph::betweenness(BNS),
Eigen = igraph::eigen_centrality(BNS))
Spec <- Spec[ -c(5:25) ]
rownames(Spec)
Spec$SS <- rownames(Spec)
Spec <- Spec[order(Spec$SS), ]
Spec <- Spec[101:140,]
Spec$Level <- "Specialization"
MS <- data.frame(Degree = igraph::degree(BNM),
Closeness = igraph::closeness(BNM),
Betweennes = igraph::betweenness(BNM),
Eigen = igraph::eigen_centrality(BNM))
MS <- MS[ -c(5:25) ]
rownames(MS)
MS$SS <- rownames(MS)
MS <- MS[order(MS$SS), ]
MS <- MS[74:105,]
MS$Level <- "Master"
Doc <- data.frame(Degree = igraph::degree(BND),
Closeness = igraph::closeness(BND),
Betweennes = igraph::betweenness(BND),
Eigen = igraph::eigen_centrality(BND))
Doc <- Doc[ -c(5:25) ]
rownames(Doc)
Doc$SS <- rownames(Doc)
Doc <- Doc[order(Doc$SS), ]
Doc <- Doc[31:60,]
Doc$Level <- "Doctorate"
Gen <- data.frame(Degree = igraph::degree(BNA),
Closeness = igraph::closeness(BNA),
Betweennes = igraph::betweenness(BNA),
Eigen = igraph::eigen_centrality(BNA))
Gen <- Gen[ -c(5:25) ]
rownames(Gen)
Gen$SS <- rownames(Gen)
Gen <- Gen[order(Gen$SS), ]
Gen <- Gen[204:246,]
Centralities <- list(Spec, MS, Doc)
Centralities <- as.data.frame(do.call(rbind, Centralities))
Resumen <- data.frame(table(Centralities$SS))
library(ggridges)
library(ggplot2)
ggplot(Centralities, aes(x = Eigen.vector, y = Level, fill = Level)) +
geom_density_ridges(alpha = 0.3) +
theme_ridges() +
theme(legend.position = "none") +
xlab("Eigenvector Centrality") +
ylab("Academic Program") +
theme(axis.text.x=element_text(size=15)) +
theme(axis.text.y=element_text(size=15)) +
theme(axis.title.x=element_text(face="italic", colour="black", size=20)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=20))
IM <- as_incidence_matrix(BNA, names = TRUE, sparse = TRUE, types = bipartite_mapping(BNA)$type)
IM2 <- as.matrix(IM)
bipartite.mapping(BNA)
V(BNA)$type <- bipartite_mapping(BNA)$type
V(BNA)$color <- ifelse(V(BNA)$type, "red", "green")
V(BNA)$shape <- ifelse(V(BNA)$type, "circle", "square")
V(BNA)$label.cex <- ifelse(V(BNA)$type, 0.8, 1)
V(BNA)$size <- sqrt(igraph::degree(BNA))
E(BNA)$color <- "lightgrey"
plot(BNA,
vertex.label = NA,
layout = layout_as_tree,
main = "")
library(bipartite)
plotweb(IM2, method = "normal", col.high = "lightgreen", col.low = "pink", col.interaction = "lightgrey")
bipartite::visweb(IM2)
save.image("DataForFigure4B.RData")
save.image("ResultsbyProgram.RData")
load("~/Documents/GitHub/SoftSkillsUniversityPrograms/ResultsbyProgram.RData")
library(GGally)
load("ResultsbyProgram.RData")
View(General)
load("ResultsbyAccreditation.RData")
table(Resumen$Freq)
View(Resumen)
View(Centralities)
SoftSkillsCentrality <- General
View(SoftSkillsCentrality)
View(SoftSkillsCentrality)
colnames(SoftSkillsCentrality)[2] <- "SS"
View(SoftSkillsCentrality)
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'generar'] <- 'Generate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'creatividad'] <- 'Creativity'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'crear'] <- 'Create'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'liderar'] <- 'Leadership'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'identificar'] <- 'Identify'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'analizar'] <- 'Analytical'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'resolver'] <- 'Solving'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'evaluar'] <- 'Evaluate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'equipos'] <- 'Teamwork'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'gestionar'] <- 'Management'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'dirigir'] <- 'Addressing'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'tomar decisiones'] <- 'Decision Making'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'reconocer'] <- 'Acknowledge'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'innovar'] <- 'Innovate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'responsable'] <- 'Accountability'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'pensamiento crítico'] <- 'Critical Thinking'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'comprender'] <- 'Understanding'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'ético'] <- 'Ethical Thinking'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'fortalecer'] <- 'Strength'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'orientar'] <- 'Guidance'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'compartir'] <- 'Sharing'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'fomentar'] <- 'Foment'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'interactuar'] <- 'Social Interaction'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'comunicar'] <- 'Communication'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'flexibilidad'] <- 'Flexibility'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'reflexionar'] <- 'Thoughtfulness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'ayudar'] <- 'Helping others'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'persuasión'] <- 'Persuasiveness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'impulsar'] <- 'Thrust'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'competir'] <- 'Competitiveness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'planificar'] <- 'Planning'
View(Centralities2)
View(Centralities)
View(Centralities)
library(GGally)
load("ResultsbyProgram.RData")
load("ResultsbyAccreditation.RData")
table(Resumen$Freq)
library(dplyr)
SoftSkillsCentrality <- Centralities %>% filter(., grepl('analizar|ayudar|compartir|competir|comprender|comunicar|crear|creatividad|dirigir|equipos|ético|evaluar|flexibilidad|fomentar|fortalecer|generar|gestionar|identificar|impulsar|innovar|interactuar|liderar|orientar|pensamiento crítico|persuasión|planificar|reconocer|reflexionar|resolver|responsable|tomar decisiones', SS))
View(SoftSkillsCentrality)
load("ResultsbyProgram.RData")
load("ResultsbyAccreditation.RData")
table(Resumen$Freq)
library(dplyr)
SoftSkillsCentrality <- Centralities %>% filter(., grepl('analizar|ayudar|compartir|competir|comprender|comunicar|crear|creatividad|dirigir|equipos|ético|evaluar|flexibilidad|fomentar|fortalecer|generar|gestionar|identificar|impulsar|innovar|interactuar|liderar|orientar|pensamiento crítico|persuasión|planificar|reconocer|reflexionar|resolver|responsable|tomar decisiones', SS))
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'generar'] <- 'Generate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'creatividad'] <- 'Creativity'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'crear'] <- 'Create'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'liderar'] <- 'Leadership'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'identificar'] <- 'Identify'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'analizar'] <- 'Analytical'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'resolver'] <- 'Solving'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'evaluar'] <- 'Evaluate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'equipos'] <- 'Teamwork'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'gestionar'] <- 'Management'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'dirigir'] <- 'Addressing'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'tomar decisiones'] <- 'Decision Making'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'reconocer'] <- 'Acknowledge'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'innovar'] <- 'Innovate'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'responsable'] <- 'Accountability'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'pensamiento crítico'] <- 'Critical Thinking'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'comprender'] <- 'Understanding'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'ético'] <- 'Ethical Thinking'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'fortalecer'] <- 'Strength'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'orientar'] <- 'Guidance'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'compartir'] <- 'Sharing'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'fomentar'] <- 'Foment'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'interactuar'] <- 'Social Interaction'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'comunicar'] <- 'Communication'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'flexibilidad'] <- 'Flexibility'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'reflexionar'] <- 'Thoughtfulness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'ayudar'] <- 'Helping others'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'persuasión'] <- 'Persuasiveness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'impulsar'] <- 'Thrust'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'competir'] <- 'Competitiveness'
SoftSkillsCentrality$SS[SoftSkillsCentrality$SS == 'planificar'] <- 'Planning'
dat <- SoftSkillsCentrality[1:5]
options(scipen = 999)
dat <- SoftSkillsCentrality %>% filter(., Level == "Doctorate")
library(datawizard)
dat <- dat %>% mutate(., degree.rescaled = ifelse(Degree == 0, 0.00, rescale(dat$Degree, to = c(0,1))))
dat <- dat %>% mutate(., closeness.rescaled = ifelse(Closeness == 0, 0.00, rescale(dat$Closeness, to = c(0,1))))
dat <- dat %>% mutate(., betweennes.rescaled = ifelse(Betweennes == 0, 0.00, rescale(dat$Betweennes, to = c(0,1))))
dat <- dat %>% mutate(., eigenvector.rescaled = ifelse(Eigen.vector == 0, 0.00, rescale(dat$Eigen.vector, to = c(0,1))))
summary(dat$eigenvector.rescaled)
summary(dat$degree.rescaled)
summary(dat$betweennes.rescaled)
summary(dat$closeness.rescaled)
colnames(dat)
p1 <- ggplot(dat, aes(x = reorder(SS, degree.rescaled), y = degree.rescaled)) +
geom_bar(stat = "identity", fill="lightgreen") + theme_bw() +
theme(axis.text.x=element_text(size=25, colour="black")) +
theme(axis.text.y=element_text(size=25, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=25)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=25)) +
coord_flip() + xlab("Soft Skills") + ylab("Degree Centrality (rescaled 0-1)")
p2 <- ggplot(dat, aes(x = reorder(SS, closeness.rescaled), y = closeness.rescaled)) +
geom_bar(stat = "identity", fill="lightgreen") + theme_bw() +
theme(axis.text.x=element_text(size=25, colour="black")) +
theme(axis.text.y=element_text(size=25, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=25)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=25)) +
coord_flip() + xlab("Soft Skills") + ylab("Closeness Centrality (rescaled 0-1)")
p3 <- ggplot(dat, aes(x = reorder(SS, betweennes.rescaled), y = betweennes.rescaled)) +
geom_bar(stat = "identity", fill="lightgreen") + theme_bw() +
theme(axis.text.x=element_text(size=25, colour="black")) +
theme(axis.text.y=element_text(size=25, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=25)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=25)) +
coord_flip() + xlab("Soft Skills") + ylab("Betweenness Centrality (rescaled 0-1)")
p4 <- ggplot(dat, aes(x = reorder(SS, eigenvector.rescaled), y = eigenvector.rescaled)) +
geom_bar(stat = "identity", fill="lightgreen") + theme_bw() +
theme(axis.text.x=element_text(size=25, colour="black")) +
theme(axis.text.y=element_text(size=25, colour="black")) +
theme(axis.title.x=element_text(face="italic", colour="black", size=25)) +
theme(axis.title.y=element_text(face="italic", colour="black", size=25)) +
coord_flip() + xlab("Soft Skills") + ylab("Eigenvector Centrality (rescaled 0-1)")
library(ggpubr)
figure <- ggarrange(p1, p2, p3, p4,
labels = c("(A)", "(B)", "(C)", "(D)"),
ncol = 2, nrow = 2)
figure
View(dat)
View(dat)
